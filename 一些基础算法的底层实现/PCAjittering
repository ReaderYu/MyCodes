## 使用pca进行图像增强（随机改变图像的色彩均衡，增加模型鲁棒性）
## 在BatchNorm出现之后，此方法已经很少被使用
## 代码效果请移步:   https://www.kaggle.com/readeryu/data-augmentation

import numpy as np 
import pandas as pd 
import os
print(os.listdir("../input"))

import cv2
## 读取'../input/.jpg'处的一张图，若要更改只需直接改动下方路径
princess = cv2.imread("../input/.jpg")


import cv2
import numpy as np
import matplotlib.pyplot as plt 
l,w=princess.shape[1],princess.shape[0]

## opencv默认的图片存储方式为BGR，而matplotlib库的图像需要RGB的输入
def show_bgr_image(image,title='image',show=True,re=False):
    rgb = image[:,:,[2,1,0]]
    if show:
        plt.title(title)
        plt.imshow(rgb)
    if re:
        return rgb
    
##图像变成指定大小##
resized_image = cv2.resize(princess,(1200,1200))

##对样本相关阵进行特征值分解
def color_augmention(img,sigma=0.1):
    image = img.reshape(-1, 3).astype(np.float32)
    scaling_factor = np.sqrt(3.0 / np.sum(np.var(image, axis=0)))
    image *= scaling_factor
    cov = np.cov(image.T)
    e,v = np.linalg.eig(cov)
    alpha = np.random.randn(1,3)*sigma
    print('扰动后的特征值大小',alpha*e)
    delta = v.dot((alpha*e).T)
    delta = (delta * 255.0).astype(np.int32)[np.newaxis, np.newaxis, :]
    img_out = np.clip(img+delta.reshape(1,1,3), 0, 255).astype(np.uint8)
    return img_out
figure_color = plt.figure(figsize=(10,10))
##看九次随机跑出来的图片内容
for i in range(3):
    for j in range(3):
        plt.subplot(3,3,3*i+j+1)
        show_bgr_image(color_augmention(resized_image),title='')
plt.show()

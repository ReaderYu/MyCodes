/*使用data_mini数据集*/
/*该数据集为SAS数据格式，链接：https://pan.baidu.com/s/1NoEf2BX6maFKZ9-1SS7JqQ 
提取码：ldw7 
*/
libname share "E:\数学\share";
data data_ori;
    set share.data_mini;
run;
libname share clear;

*指定模型训练后各个决策树打分代码存放的目录;
%let pth=E:\数学\share\新建文件夹;

*测试、验证集分割;
data traindata testdata;
    set data_ori;
    x = ranuni(0);
    if x < 0.2 then output testdata;
    else output traindata;
    drop x;
run;

*随机选取数值变量名，注意不能选择目标值和用户标号值，存入数据集contents_traindata中;
proc contents data= traindata(drop=bad_good cust_id) out = contents_traindata noprint;
run;
data contents_traindata;
    set contents_traindata;
    where type=1;
    keep name;
run;

*训练模型，由于数据不均衡，使用了欠采样进行数据的抽取;
/*indat:训练数据名称,p、q分别表示随机选取变量的次数和选定变量后数据采样的次数，森林里共有p*q棵决策树*/
%macro rftrain(indat,p,q);

    %do i=1 %to &p.;

    *每次随机筛选50个变量参与建模;
    proc surveyselect data=contents_traindata out=train_var sampsize=50 noprint;quit;
    proc sql noprint;
        select distinct name into:name separated by ' '    from train_var;
    quit;

    *数据欠采样;
    %do j= 1 %to &q.;
        proc sort data=&indat.;
            by bad_good;
        run;
        proc surveyselect data=&indat. out=split_data samprate=(0.05,1) noprint;
            strata bad_good;
        run; 
        *构建决策树, criterion=entropy指定信息熵作为决策树分割的依据，可以选择信息增益、Gini系数等其他指标;
        /*由于SAS软件许可证不同，split过程可能不能使用，那时使用proc hpsplit替换之*/
		Proc split data=split_data 
        criterion=entropy
        maxbranch=3
        maxdepth=5
        leafsize=30
        splitsize=30;
        code file="&pth.\sas_rule&i._&j..txt";
        describe file="&pth.\rulefinal&i._&j..txt";
        input  &name./ level=interval;
        target bad_good/level=binary;
        run; 
    %end;
    %end;
%mend;

*训练决策树;
%rftrain(traindata,2,3);


*模型应用;
%macro rfscore(indat,p,q,outdat);
    %do i=1 %to &p.;
    %do j=1 %to &q.;
        data score_&i._&j.;
            set &indat.;
            %include "&pth.\sas_rule&i._&j..txt";
            p_&i._&j.=p_bad_good1;
            keep cust_id p_&i._&j.;
        run;
        proc sort data=score_&i._&j.;
            by cust_id;
        run;
    %end;
    %end;

    proc sort data=&indat.(keep=cust_id bad_good) out=tmp1;
        by cust_id;
    run;

    data &outdat.;
        merge tmp1 %do i=1 %to &p.;%do j=1 %to &q.;score_&i._&j %end;%end;;
        by cust_id;
        pr=sum(of %do i=1 %to &p.;%do j=1 %to &q.;p_&i._&j %end;%end;)/(&p.*&q.);
        keep cust_id bad_good pr;
    run;

%mend;
*对验证数据打分，结果输出到表score_valdt;
%rfscore(testdata,2,3,score_valdt);


*模型评估代码;
/*评估准则为查准率和查全率，进一步的，也可以在此基础上绘制ROC曲线进行评估*/
%macro rfFit(in,out,grp_cnt,pred_var,act_var);        

data work.temp;        
    set &in;        
run;        

data _null_;        
    set work.temp nobs=obs ;        
    call symput("Base",obs/&grp_cnt);        
    stop;        
run;        

proc sort data=work.temp;        
    by  descending &pred_var;        
run;        

data work.temp;     
    N=_N_;        
    set work.temp;        
    format Grp 4.0;        
    Grp=INT((N-1)/&base.);        
run;        

proc sql;
    create table &out. as
        select grp,sum(bad_good)/count(*)as actual_rate,sum(pr)/count(*)as pred_rate 
        from temp group by grp;
    drop table temp;
quit;   

%mend;    

%rfFit(score_valdt,fit_valdt,20,pr,bad_good);
